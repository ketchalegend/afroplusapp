{"version":3,"sources":["ng://ionic-image-loader/lib/services/image-loader-config.service.ts","node_modules/tslib/tslib.es6.js","ng://ionic-image-loader/lib/services/image-loader.service.ts","ng://ionic-image-loader/lib/ionic-image-loader.component.ts","ng://ionic-image-loader/lib/ionic-image-loader.module.ts"],"names":["ImageLoaderConfigService","this","debugMode","spinnerEnabled","fallbackAsPlaceholder","backgroundSize","backgroundRepeat","display","width","height","useImg","concurrency","maxCacheSize","maxCacheAge","imageReturnType","fileNameCachedWithExtension","fallbackFileNameCachedExtension","cacheDirectoryType","_cacheDirectoryName","Object","defineProperty","prototype","name","replace","enableDebugMode","enableSpinner","enable","enableFallbackAsPlaceholder","setCacheDirectoryName","cacheDirectoryName","setHeight","setWidth","setDisplay","useImageTag","use","setBackgroundSize","setBackgroundRepeat","setFallbackUrl","fallbackUrl","setConcurrency","setMaximumCacheSize","cacheSize","setMaximumCacheAge","cacheAge","setImageReturnType","setSpinnerName","spinnerName","setSpinnerColor","color","spinnerColor","setHttpHeaders","headers","httpHeaders","setFileTransferOptions","options","setFileNameCachedWithExtension","setFallbackFileNameCachedExtension","extension","Injectable","args","providedIn","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","EXTENSIONS","ImageLoaderService","config","file","http","platform","webview","_this","isCacheReady","isInit","initPromise","initPromiseResolve","lockSubject","Subject","lock$","asObservable","queue","processing","currentlyProcessing","cacheIndex","currentCacheSize","indexed","lockedCallsQueue","is","fromEvent","document","pipe","first","subscribe","res","nativeAvailable","initCache","throwWarning","File","installed","webkit","messageHandlers","location","host","LiveReload","window","undefined","ready","preload","imageUrl","getImagePath","getFileCacheDirectory","dataDirectory","externalDataDirectory","documentsDirectory","cacheDirectory","clearImageCache","_a","runLocked","fileName","createFileName","route","removeFile","isWKWebView","isIonicWKWebView","tempDirectory","throwError","err_1","clearCache","removeRecursively","err","err_2","Error","isImageUrlRelative","getCachedImagePath","addItemToQueue","processLockedQueue","getLockedState","setLockedState","slice","console","log","err_4","take","toPromise","awaitUnlocked","filter","locked","fn","test","p","rej","processQueue","canProcess","currentItem","splice","currentlyInQueue","error","localUrl","err_5","localDir","get","responseType","data","writeFile","isCacheSpaceExceeded","maintainCacheSize","addFileToIndex","err_6","some","item","createCacheDirectory","indexCache","err_7","getMetadata","metadata","Date","now","modificationTime","getTime","size","listDir","files","all","map","bind","sort","a","b","err_8","maintain_1","url","isDevServer","dirPath","tempDirPath","resolveLocalFilesystemUrl","fileEntry","readAsDataURL","normalizeUrl","nativeURL","tempFileEntry","copyFile","Ionic","normalizeURL","convertFileSrc","_i","arguments","unshift","warn","cacheDirectoryExists","directory","checkDir","cacheDirectoryPromise","tempDirectoryPromise","createDir","catch","hashString","toString","getExtensionFromUrl","string","hash","i","charCodeAt","urlWitoutParams","split","ext","substr","lastIndexOf","toLowerCase","indexOf","HttpClient","Platform","WebView","propMap","IonicImageLoaderComponent","_element","renderer","imageLoader","spinner","imgAttributes","cache","load","EventEmitter","isLoading","_useImg","val","_src","processImageUrl","updateImage","ngOnInit","setImage","src","stopLoading","element","createElement","appendChild","nativeElement","setAttribute","forEach","attribute","listen","prop","setStyle","emit","Component","selector","template","ElementRef","Renderer2","Input","Output","IonicImageLoader","forRoot","ngModule","providers","NgModule","imports","IonicModule","HttpClientModule","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import { HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ImageLoaderConfigService {\n  debugMode = false;\n\n  spinnerEnabled = true;\n\n  fallbackAsPlaceholder = false;\n\n  backgroundSize = 'contain';\n\n  backgroundRepeat = 'no-repeat';\n\n  display = 'block';\n\n  width = '100%';\n\n  height = '100%';\n\n  useImg = false;\n\n  fallbackUrl;\n\n  concurrency = 5;\n\n  maxCacheSize = -1;\n\n  maxCacheAge = -1;\n\n  imageReturnType: 'base64' | 'uri' = 'uri';\n\n  spinnerName;\n\n  spinnerColor;\n\n  httpHeaders: HttpHeaders;\n\n  // Must be default 'true' for the new WebView to show images\n  fileNameCachedWithExtension = true;\n\n  fallbackFileNameCachedExtension = '.jpg';\n\n  cacheDirectoryType: 'cache' | 'data' | 'external' = 'cache';\n\n  private _cacheDirectoryName = 'image-loader-cache';\n\n\n  get cacheDirectoryName() {\n    return this._cacheDirectoryName;\n  }\n\n  set cacheDirectoryName(name) {\n    name.replace(/\\W/g, '');\n    this._cacheDirectoryName = name;\n  }\n\n  /**\n   * Enables debug mode to receive console logs, errors, warnings\n   */\n  enableDebugMode() {\n    this.debugMode = true;\n  }\n\n  /**\n   * Enable/Disable the spinner by default. Defaults to true.\n   * @param enable set to true to enable\n   */\n  enableSpinner(enable: boolean) {\n    this.spinnerEnabled = enable;\n  }\n\n  /**\n   * Enable/Disable the fallback image as placeholder instead of the spinner. Defaults to false.\n   * @param enable set to true to enable\n   */\n  enableFallbackAsPlaceholder(enable: boolean) {\n    this.fallbackAsPlaceholder = enable;\n  }\n\n  /**\n   * Sets the cache directory name. Defaults to 'image-loader-cache'\n   * @param name name of directory\n   */\n  setCacheDirectoryName(name: string) {\n    this.cacheDirectoryName = name;\n  }\n\n  /**\n   * Set default height for images that are not using <img> tag\n   * @param height height\n   */\n  setHeight(height: string) {\n    this.height = height;\n  }\n\n  /**\n   * Set default width for images that are not using <img> tag\n   * @param width Width\n   */\n  setWidth(width: string) {\n    this.width = width;\n  }\n\n  /**\n   * Enable display mode for images that are not using <img> tag\n   * @param display Display mode\n   */\n  setDisplay(display: string) {\n    this.display = display;\n  }\n\n  /**\n   * Use <img> tag by default\n   * @param use set to true to use <img> tag by default\n   */\n  useImageTag(use: boolean) {\n    this.useImg = use;\n  }\n\n  /**\n   * Set default background size for images that are not using <img> tag\n   * @param backgroundSize Background size\n   */\n  setBackgroundSize(backgroundSize: string) {\n    this.backgroundSize = backgroundSize;\n  }\n\n  /**\n   * Set background repeat for images that are not using <img> tag\n   * @param backgroundRepeat Background repeat\n   */\n  setBackgroundRepeat(backgroundRepeat: string) {\n    this.backgroundRepeat = backgroundRepeat;\n  }\n\n  /**\n   * Set fallback URL to use when image src is undefined or did not resolve.\n   * This image will not be cached. This should ideally be a locally saved image.\n   * @param fallbackUrl The remote or local URL of the image\n   */\n  setFallbackUrl(fallbackUrl: string) {\n    this.fallbackUrl = fallbackUrl;\n  }\n\n  /**\n   * Set the maximum number of allowed connections at the same time.\n   * @param concurrency\n   */\n  setConcurrency(concurrency: number) {\n    this.concurrency = concurrency;\n  }\n\n  /**\n   * Sets the maximum allowed cache size\n   * @param cacheSize Cache size in bytes\n   */\n  setMaximumCacheSize(cacheSize: number) {\n    this.maxCacheSize = cacheSize;\n  }\n\n  /**\n   * Sets the maximum allowed cache age\n   * @param cacheAge Maximum cache age in milliseconds\n   */\n  setMaximumCacheAge(cacheAge: number) {\n    this.maxCacheAge = cacheAge;\n  }\n\n  /**\n   * Set the return type of cached images\n   * @param imageReturnType The return type; either 'base64' or 'uri'\n   */\n  setImageReturnType(imageReturnType: 'base64' | 'uri') {\n    this.imageReturnType = imageReturnType;\n  }\n\n  /**\n   * Set the default spinner name\n   * @param name\n   */\n  setSpinnerName(name: string) {\n    this.spinnerName = name;\n  }\n\n  /**\n   * Set the default spinner color\n   * @param color\n   */\n  setSpinnerColor(color: string) {\n    this.spinnerColor = color;\n  }\n\n  /**\n   * Set headers options for the HttpClient transfers.\n   * @param headers\n   */\n  setHttpHeaders(headers: HttpHeaders) {\n    this.httpHeaders = headers;\n  }\n\n  /**\n   * Set options for the FileTransfer plugin\n   * @param options\n   * @deprecated FileTransfer plugin removed.\n   */\n  setFileTransferOptions(options: {\n    trustAllHosts: boolean;\n    [key: string]: any;\n  }) {\n    // do nothing, plugin deprecated.\n  }\n\n  /**\n   * Enable/Disable the save filename of cached images with extension.  Defaults to false.\n   * @param enable set to true to enable\n   */\n  setFileNameCachedWithExtension(enable: boolean) {\n    this.fileNameCachedWithExtension = enable;\n  }\n\n  /**\n   * Set fallback extension filename of cached images.  Defaults to '.jpg'.\n   * @param extension fallback extension (e.x .jpg)\n   */\n  setFallbackFileNameCachedExtension(extension: string) {\n    this.fallbackFileNameCachedExtension = extension;\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { File, FileEntry } from '@ionic-native/file/ngx';\nimport { WebView } from '@ionic-native/ionic-webview/ngx';\nimport { Platform } from '@ionic/angular';\nimport { fromEvent, Subject } from 'rxjs';\nimport { filter, first, take } from 'rxjs/operators';\nimport { ImageLoaderConfigService } from './image-loader-config.service';\n\ninterface IndexItem {\n  name: string;\n  modificationTime: Date;\n  size: number;\n}\n\ninterface QueueItem {\n  imageUrl: string;\n  resolve: Function;\n  reject: Function;\n}\n\ndeclare const Ionic: any;\n\nconst EXTENSIONS = ['jpg', 'png', 'jpeg', 'gif', 'svg', 'tiff'];\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ImageLoaderService {\n\n  /**\n   * Indicates if the cache service is ready.\n   * When the cache service isn't ready, images are loaded via browser instead.\n   */\n  private isCacheReady = false;\n  /**\n   * Indicates if this service is initialized.\n   * This service is initialized once all the setup is done.\n   */\n  private isInit = false;\n  private initPromiseResolve: Function;\n  private initPromise = new Promise<void>(resolve => this.initPromiseResolve = resolve);\n  private lockSubject = new Subject<boolean>();\n  private lock$ = this.lockSubject.asObservable();\n  /**\n   * Number of concurrent requests allowed\n   */\n  private concurrency = 5;\n  /**\n   * Queue items\n   */\n  private queue: QueueItem[] = [];\n  private processing = 0;\n  /**\n   * Fast accessible Object for currently processing items\n   */\n  private currentlyProcessing: { [index: string]: Promise<any> } = {};\n  private cacheIndex: IndexItem[] = [];\n  private currentCacheSize = 0;\n  private indexed = false;\n  private lockedCallsQueue: Function[] = [];\n\n  constructor(\n    private config: ImageLoaderConfigService,\n    private file: File,\n    private http: HttpClient,\n    private platform: Platform,\n    private webview: WebView,\n  ) {\n    if (!platform.is('cordova')) {\n      // we are running on a browser, or using livereload\n      // plugin will not function in this case\n      this.isInit = true;\n      this.throwWarning(\n        'You are running on a browser or using livereload, IonicImageLoader will not function, falling back to browser loading.',\n      );\n      this.initPromiseResolve();\n    } else {\n      fromEvent(document, 'deviceready')\n        .pipe(first())\n        .subscribe(res => {\n          if (this.nativeAvailable) {\n            this.initCache();\n          } else {\n            // we are running on a browser, or using livereload\n            // plugin will not function in this case\n            this.isInit = true;\n            this.initPromiseResolve();\n            this.throwWarning(\n              'You are running on a browser or using livereload, IonicImageLoader will not function, falling back to browser loading.',\n            );\n          }\n        });\n    }\n  }\n\n  get nativeAvailable(): boolean {\n    return File.installed();\n  }\n\n  private get isCacheSpaceExceeded(): boolean {\n    return (\n      this.config.maxCacheSize > -1 &&\n      this.currentCacheSize > this.config.maxCacheSize\n    );\n  }\n\n  private get isWKWebView(): boolean {\n    return (\n      this.platform.is('ios') &&\n      (<any>window).webkit &&\n      (<any>window).webkit.messageHandlers\n    );\n  }\n\n  private get isIonicWKWebView(): boolean {\n    return (\n      //  Important: isWKWebview && isIonicWKWebview must be mutually excluse.\n      //  Otherwise the logic for copying to tmp under IOS will fail.\n      (this.platform.is('android') && this.webview) ||\n      (this.platform.is('android')) && (location.host === 'localhost:8080') ||\n      (<any>window).LiveReload);\n  }\n\n  private get isDevServer(): boolean {\n    return window['IonicDevServer'] !== undefined;\n  }\n\n  /**\n   * Check if we can process more items in the queue\n   */\n  private get canProcess(): boolean {\n    return this.queue.length > 0 && this.processing < this.concurrency;\n  }\n\n  ready(): Promise<void> {\n    return this.initPromise;\n  }\n\n  /**\n   * Preload an image\n   * @param imageUrl Image URL\n   * @returns returns a promise that resolves with the cached image URL\n   */\n  preload(imageUrl: string): Promise<string> {\n    return this.getImagePath(imageUrl);\n  }\n\n  getFileCacheDirectory() {\n    if (this.config.cacheDirectoryType === 'data') {\n      return this.file.dataDirectory;\n    } else if (this.config.cacheDirectoryType === 'external') {\n      return this.platform.is('android') ? this.file.externalDataDirectory : this.file.documentsDirectory;\n    }\n    return this.file.cacheDirectory;\n  }\n\n  /**\n   * Clears cache of a single image\n   * @param imageUrl Image URL\n   */\n  async clearImageCache(imageUrl: string) {\n    if (!this.platform.is('cordova')) {\n      return;\n    }\n\n    await this.ready();\n\n    this.runLocked(async () => {\n      const fileName = this.createFileName(imageUrl);\n      const route = this.getFileCacheDirectory() + this.config.cacheDirectoryName;\n      // pause any operations\n      this.isInit = false;\n\n      try {\n        await this.file.removeFile(route, fileName);\n\n        if (this.isWKWebView && !this.isIonicWKWebView) {\n          await this.file.removeFile(this.file.tempDirectory + this.config.cacheDirectoryName, fileName);\n        }\n      } catch (err) {\n        this.throwError(err);\n      }\n\n      return this.initCache(true);\n    });\n  }\n\n  /**\n   * Clears the cache\n   */\n  async clearCache() {\n    if (!this.platform.is('cordova')) {\n      return;\n    }\n\n    await this.ready();\n\n    this.runLocked(async () => {\n      try {\n        await this.file.removeRecursively(this.getFileCacheDirectory(), this.config.cacheDirectoryName);\n\n        if (this.isWKWebView && !this.isIonicWKWebView) {\n          // also clear the temp files\n          try {\n            this.file.removeRecursively(this.file.tempDirectory, this.config.cacheDirectoryName);\n          } catch (err) {\n            // Noop catch. Removing the tempDirectory might fail,\n            // as it is not persistent.\n          }\n        }\n      } catch (err) {\n        this.throwError(err);\n      }\n\n      return this.initCache(true);\n    });\n  }\n\n  /**\n   * Gets the filesystem path of an image.\n   * This will return the remote path if anything goes wrong or if the cache service isn't ready yet.\n   * @param imageUrl The remote URL of the image\n   * @returns Returns a promise that will always resolve with an image URL\n   */\n  async getImagePath(imageUrl: string): Promise<string> {\n    if (typeof imageUrl !== 'string' || imageUrl.length <= 0) {\n      throw new Error('The image url provided was empty or invalid.');\n    }\n\n    await this.ready();\n\n    if (!this.isCacheReady) {\n      this.throwWarning('The cache system is not running. Images will be loaded by your browser instead.');\n      return imageUrl;\n    }\n\n    if (this.isImageUrlRelative(imageUrl)) {\n      return imageUrl;\n    }\n\n    try {\n      return await this.getCachedImagePath(imageUrl);\n    } catch (err) {\n      // image doesn't exist in cache, lets fetch it and save it\n      return this.addItemToQueue(imageUrl);\n    }\n  }\n\n  private async processLockedQueue() {\n    if (await this.getLockedState()) {\n      return;\n    }\n\n    if (this.lockedCallsQueue.length > 0) {\n      await this.setLockedState(true);\n\n      try {\n        await this.lockedCallsQueue.slice(0, 1)[0]();\n      } catch (err) {\n        console.log('Error running locked function: ', err);\n      }\n\n      await this.setLockedState(false);\n      return this.processLockedQueue();\n    }\n  }\n\n  private getLockedState(): Promise<boolean> {\n    return this.lock$\n      .pipe(take(1))\n      .toPromise();\n  }\n\n  private awaitUnlocked(): Promise<boolean> {\n    return this.lock$\n      .pipe(\n        filter(locked => !!locked),\n        take(1),\n      )\n      .toPromise();\n  }\n\n  private async setLockedState(locked: boolean) {\n    this.lockSubject.next(locked);\n  }\n\n  private runLocked(fn: Function) {\n    this.lockedCallsQueue.push(fn);\n    this.processLockedQueue();\n  }\n\n  /**\n   * Returns if an imageUrl is an relative path\n   * @param imageUrl\n   */\n  private isImageUrlRelative(imageUrl: string) {\n    return !/^(https?|file):\\/\\/\\/?/i.test(imageUrl);\n  }\n\n  /**\n   * Add an item to the queue\n   * @param imageUrl\n   * @param resolve\n   * @param reject\n   */\n  private addItemToQueue(imageUrl: string, resolve?, reject?): void | Promise<any> {\n    let p: void | Promise<any>;\n\n    if (!resolve && !reject) {\n      p = new Promise<any>((res, rej) => {\n        resolve = res;\n        reject = rej;\n      });\n    } else {\n      resolve = resolve || (() => {\n      });\n      reject = reject || (() => {\n      });\n    }\n\n    this.queue.push({\n      imageUrl,\n      resolve,\n      reject,\n    });\n\n    this.processQueue();\n\n    return p;\n  }\n\n  /**\n   * Processes one item from the queue\n   */\n  private async processQueue() {\n    // make sure we can process items first\n    if (!this.canProcess) {\n      return;\n    }\n\n    // increase the processing number\n    this.processing++;\n\n    // take the first item from queue\n    const currentItem: QueueItem = this.queue.splice(0, 1)[0];\n\n    // function to call when done processing this item\n    // this will reduce the processing number\n    // then will execute this function again to process any remaining items\n    const done = () => {\n      this.processing--;\n      this.processQueue();\n\n      // only delete if it's the last/unique occurrence in the queue\n      if (this.currentlyProcessing[currentItem.imageUrl] !== undefined && !this.currentlyInQueue(currentItem.imageUrl)) {\n        delete this.currentlyProcessing[currentItem.imageUrl];\n      }\n    };\n\n    const error = (e) => {\n      currentItem.reject();\n      this.throwError(e);\n      done();\n    };\n\n    if (this.currentlyProcessing[currentItem.imageUrl] !== undefined) {\n      try {\n        // Prevented same Image from loading at the same time\n        await this.currentlyProcessing[currentItem.imageUrl];\n        const localUrl = await this.getCachedImagePath(currentItem.imageUrl);\n        currentItem.resolve(localUrl);\n        done();\n      } catch (err) {\n        error(err);\n      }\n      return;\n    }\n\n    this.currentlyProcessing[currentItem.imageUrl] = (async () => {\n      // process more items concurrently if we can\n      if (this.canProcess) {\n        this.processQueue();\n      }\n\n      const localDir = this.getFileCacheDirectory() + this.config.cacheDirectoryName + '/';\n      const fileName = this.createFileName(currentItem.imageUrl);\n\n      try {\n        const data: Blob = await this.http.get(currentItem.imageUrl, {\n          responseType: 'blob',\n          headers: this.config.httpHeaders,\n        }).toPromise();\n\n        const file = await this.file.writeFile(localDir, fileName, data, {replace: true}) as FileEntry;\n\n        if (this.isCacheSpaceExceeded) {\n          this.maintainCacheSize();\n        }\n\n        await this.addFileToIndex(file);\n        const localUrl = await this.getCachedImagePath(currentItem.imageUrl);\n        currentItem.resolve(localUrl);\n        done();\n        this.maintainCacheSize();\n      } catch (err) {\n        error(err);\n        throw err;\n      }\n    })();\n\n  }\n\n  /**\n   * Search if the url is currently in the queue\n   * @param imageUrl Image url to search\n   */\n  private currentlyInQueue(imageUrl: string) {\n    return this.queue.some(item => item.imageUrl === imageUrl);\n  }\n\n  /**\n   * Initialize the cache service\n   * @param [replace] Whether to replace the cache directory if it already exists\n   */\n  private async initCache(replace?: boolean) {\n    this.concurrency = this.config.concurrency;\n\n    // create cache directories if they do not exist\n    try {\n      await this.createCacheDirectory(replace);\n      await this.indexCache();\n      this.isCacheReady = true;\n    } catch (err) {\n      this.throwError(err);\n    }\n\n    this.isInit = true;\n    this.initPromiseResolve();\n  }\n\n  /**\n   * Adds a file to index.\n   * Also deletes any files if they are older than the set maximum cache age.\n   * @param file FileEntry to index\n   */\n  private async addFileToIndex(file: FileEntry): Promise<any> {\n    const metadata = await new Promise<any>((resolve, reject) => file.getMetadata(resolve, reject));\n\n    if (\n      this.config.maxCacheAge > -1 &&\n      Date.now() - metadata.modificationTime.getTime() >\n      this.config.maxCacheAge\n    ) {\n      // file age exceeds maximum cache age\n      return this.removeFile(file.name);\n    } else {\n      // file age doesn't exceed maximum cache age, or maximum cache age isn't set\n      this.currentCacheSize += metadata.size;\n\n      // add item to index\n      this.cacheIndex.push({\n        name: file.name,\n        modificationTime: metadata.modificationTime,\n        size: metadata.size,\n      });\n    }\n  }\n\n  /**\n   * Indexes the cache if necessary\n   */\n  private async indexCache(): Promise<void> {\n    this.cacheIndex = [];\n\n    try {\n      const files = await this.file.listDir(this.getFileCacheDirectory(), this.config.cacheDirectoryName);\n      await Promise.all(files.map(this.addFileToIndex.bind(this)));\n      // Sort items by date. Most recent to oldest.\n      this.cacheIndex = this.cacheIndex.sort(\n        (a: IndexItem, b: IndexItem): number => (a > b ? -1 : a < b ? 1 : 0),\n      );\n      this.indexed = true;\n    } catch (err) {\n      this.throwError(err);\n    }\n  }\n\n  /**\n   * This method runs every time a new file is added.\n   * It checks the cache size and ensures that it doesn't exceed the maximum cache size set in the config.\n   * If the limit is reached, it will delete old images to create free space.\n   */\n  private async maintainCacheSize() {\n    if (this.config.maxCacheSize > -1 && this.indexed) {\n      const maintain = async () => {\n        if (this.currentCacheSize > this.config.maxCacheSize) {\n          // grab the first item in index since it's the oldest one\n          const file: IndexItem = this.cacheIndex.splice(0, 1)[0];\n\n          if (typeof file === 'undefined') {\n            return maintain();\n          }\n\n          // delete the file then process next file if necessary\n          try {\n            await this.removeFile(file.name);\n          } catch (err) {\n            // ignore errors, nothing we can do about it\n          }\n\n          this.currentCacheSize -= file.size;\n          return maintain();\n        }\n      };\n\n      return maintain();\n    }\n  }\n\n  /**\n   * Remove a file\n   * @param file The name of the file to remove\n   */\n  private async removeFile(file: string): Promise<any> {\n    await this.file.removeFile(this.getFileCacheDirectory() + this.config.cacheDirectoryName, file);\n\n    if (this.isWKWebView && !this.isIonicWKWebView) {\n      try {\n        return this.file.removeFile(this.file.tempDirectory + this.config.cacheDirectoryName, file);\n      } catch (err) {\n        // Noop catch. Removing the files from tempDirectory might fail, as it is not persistent.\n      }\n    }\n  }\n\n  /**\n   * Get the local path of a previously cached image if exists\n   * @param url The remote URL of the image\n   * @returns Returns a promise that resolves with the local path if exists, or rejects if doesn't exist\n   */\n  private async getCachedImagePath(url: string): Promise<string> {\n    await this.ready();\n\n    if (!this.isCacheReady) {\n      throw new Error('Cache is not ready');\n    }\n\n    // if we're running with livereload, ignore cache and call the resource from it's URL\n    if (this.isDevServer) {\n      return url;\n    }\n\n    // get file name\n    const fileName = this.createFileName(url);\n\n    // get full path\n    const dirPath = this.getFileCacheDirectory() + this.config.cacheDirectoryName,\n      tempDirPath = this.file.tempDirectory + this.config.cacheDirectoryName;\n\n    try {\n      // check if exists\n      const fileEntry = await this.file.resolveLocalFilesystemUrl(dirPath + '/' + fileName) as FileEntry;\n\n      // file exists in cache\n      if (this.config.imageReturnType === 'base64') {\n        // read the file as data url and return the base64 string.\n        // should always be successful as the existence of the file\n        // is already ensured\n        const base64: string = await this.file.readAsDataURL(dirPath, fileName);\n        return base64.replace('data:null', 'data:*/*');\n      } else if (this.config.imageReturnType !== 'uri') {\n        return;\n      }\n\n      // now check if iOS device & using WKWebView Engine.\n      // in this case only the tempDirectory is accessible,\n      // therefore the file needs to be copied into that directory first!\n      if (this.isIonicWKWebView) {\n        return this.normalizeUrl(fileEntry);\n      }\n\n      if (!this.isWKWebView) {\n        // return native path\n        return fileEntry.nativeURL;\n      }\n\n      // check if file already exists in temp directory\n      try {\n        const tempFileEntry = await this.file.resolveLocalFilesystemUrl(tempDirPath + '/' + fileName) as FileEntry;\n        // file exists in temp directory\n        // return native path\n        return this.normalizeUrl(tempFileEntry);\n      } catch (err) {\n        // file does not yet exist in the temp directory.\n        // copy it!\n        const tempFileEntry = await this.file\n          .copyFile(dirPath, fileName, tempDirPath, fileName) as FileEntry;\n\n        // now the file exists in the temp directory\n        // return native path\n        return this.normalizeUrl(tempFileEntry);\n      }\n    } catch (err) {\n      throw new Error('File does not exist');\n    }\n  }\n\n  /**\n   * Normalizes the image uri to a version that can be loaded in the webview\n   * @param fileEntry the FileEntry of the image file\n   * @returns the normalized Url\n   */\n\n  private normalizeUrl(fileEntry: FileEntry): string {\n    // Use Ionic normalizeUrl to generate the right URL for Ionic WKWebView\n    if (Ionic && typeof Ionic.normalizeURL === 'function') {\n      return Ionic.normalizeURL(fileEntry.nativeURL);\n    }\n    // use new webview function to do the trick\n    if (this.webview) {\n      return this.webview.convertFileSrc(fileEntry.nativeURL);\n    }\n    return fileEntry.nativeURL;\n  }\n\n  /**\n   * Throws a console error if debug mode is enabled\n   * @param args Error message\n   */\n  private throwError(...args: any[]) {\n    if (this.config.debugMode) {\n      args.unshift('ImageLoader Error: ');\n      console.error.apply(console, args);\n    }\n  }\n\n  /**\n   * Throws a console warning if debug mode is enabled\n   * @param args Error message\n   */\n  private throwWarning(...args: any[]) {\n    if (this.config.debugMode) {\n      args.unshift('ImageLoader Warning: ');\n      console.warn.apply(console, args);\n    }\n  }\n\n  /**\n   * Check if the cache directory exists\n   * @param directory The directory to check. Either this.file.tempDirectory or this.getFileCacheDirectory()\n   * @returns Returns a promise that resolves if exists, and rejects if it doesn't\n   */\n  private cacheDirectoryExists(directory: string): Promise<boolean> {\n    return this.file.checkDir(directory, this.config.cacheDirectoryName);\n  }\n\n  /**\n   * Create the cache directories\n   * @param replace override directory if exists\n   * @returns Returns a promise that resolves if the directories were created, and rejects on error\n   */\n  private createCacheDirectory(replace: boolean = false): Promise<any> {\n    let cacheDirectoryPromise: Promise<any>, tempDirectoryPromise: Promise<any>;\n\n    if (replace) {\n      // create or replace the cache directory\n      cacheDirectoryPromise = this.file.createDir(this.getFileCacheDirectory(), this.config.cacheDirectoryName, replace);\n    } else {\n      // check if the cache directory exists.\n      // if it does not exist create it!\n      cacheDirectoryPromise = this.cacheDirectoryExists(this.getFileCacheDirectory())\n        .catch(() => this.file.createDir(this.getFileCacheDirectory(), this.config.cacheDirectoryName, false));\n    }\n\n    if (this.isWKWebView && !this.isIonicWKWebView) {\n      if (replace) {\n        // create or replace the temp directory\n        tempDirectoryPromise = this.file.createDir(\n          this.file.tempDirectory,\n          this.config.cacheDirectoryName,\n          replace,\n        );\n      } else {\n        // check if the temp directory exists.\n        // if it does not exist create it!\n        tempDirectoryPromise = this.cacheDirectoryExists(\n          this.file.tempDirectory,\n        ).catch(() =>\n          this.file.createDir(\n            this.file.tempDirectory,\n            this.config.cacheDirectoryName,\n            false,\n          ),\n        );\n      }\n    } else {\n      tempDirectoryPromise = Promise.resolve();\n    }\n\n    return Promise.all([cacheDirectoryPromise, tempDirectoryPromise]);\n  }\n\n  /**\n   * Creates a unique file name out of the URL\n   * @param url URL of the file\n   * @returns Unique file name\n   */\n  private createFileName(url: string): string {\n    // hash the url to get a unique file name\n    return (\n      this.hashString(url).toString() +\n      (this.config.fileNameCachedWithExtension\n        ? this.getExtensionFromUrl(url)\n        : '')\n    );\n  }\n\n  /**\n   * Converts a string to a unique 32-bit int\n   * @param string string to hash\n   * @returns 32-bit int\n   */\n  private hashString(string: string): number {\n    let hash = 0,\n      char;\n    if (string.length === 0) {\n      return hash;\n    }\n    for (let i = 0; i < string.length; i++) {\n      char = string.charCodeAt(i);\n      // tslint:disable-next-line\n      hash = (hash << 5) - hash + char;\n      // tslint:disable-next-line\n      hash = hash & hash;\n    }\n    return hash;\n  }\n\n  /**\n   * Extract extension from filename or url\n   *\n   * @param url\n   * @returns\n   *\n   * Not always will url's contain a valid image extention. We'll check if any valid extention is supplied.\n   * If not, we will use the default.\n   */\n  private getExtensionFromUrl(url: string): string {\n    const urlWitoutParams = url.split(/\\#|\\?/)[0];\n    const ext: string = (urlWitoutParams.substr((~-urlWitoutParams.lastIndexOf('.') >>> 0) + 1) || '').toLowerCase();\n\n    return (\n      EXTENSIONS.indexOf(ext) >= 0 ? ext : this.config.fallbackFileNameCachedExtension\n    );\n  }\n}\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, Renderer2 } from '@angular/core';\nimport { ImageLoaderConfigService } from './services/image-loader-config.service';\nimport { ImageLoaderService } from './services/image-loader.service';\n\nconst propMap: any = {\n  display: 'display',\n  height: 'height',\n  width: 'width',\n  backgroundSize: 'background-size',\n  backgroundRepeat: 'background-repeat',\n};\n\nexport interface ImageAttribute {\n  element: string;\n  value: string;\n}\n\n@Component({\n  selector: 'img-loader',\n  template: `\n    <ion-spinner\n        *ngIf=\"spinner && isLoading && !fallbackAsPlaceholder\"\n        [name]=\"spinnerName\"\n        [color]=\"spinnerColor\"\n    ></ion-spinner>\n    <ng-content></ng-content>\n  `,\n  styles: [\n    'ion-spinner { float: none; margin-left: auto; margin-right: auto; display: block; }',\n  ],\n})\nexport class IonicImageLoaderComponent implements OnInit {\n  /**\n   * Fallback URL to load when the image url fails to load or does not exist.\n   */\n  @Input() fallbackUrl: string = this.config.fallbackUrl;\n  /**\n   * Whether to show a spinner while the image loads\n   */\n  @Input() spinner: boolean = this.config.spinnerEnabled;\n  /**\n   * Whether to show the fallback image instead of a spinner while the image loads\n   */\n\n  @Input() fallbackAsPlaceholder: boolean = this.config.fallbackAsPlaceholder;\n  /**\n   * Attributes to pass through to img tag if _useImg == true\n   */\n  @Input() imgAttributes: ImageAttribute[] = [];\n  /**\n   * Enable/Disable caching\n   */\n  @Input() cache = true;\n  /**\n   * Width of the image. This will be ignored if using useImg.\n   */\n  @Input() width: string = this.config.width;\n  /**\n   * Height of the image. This will be ignored if using useImg.\n   */\n  @Input() height: string = this.config.height;\n  /**\n   * Display type of the image. This will be ignored if using useImg.\n   */\n  @Input() display: string = this.config.display;\n  /**\n   * Background size. This will be ignored if using useImg.\n   */\n  @Input() backgroundSize: string = this.config.backgroundSize;\n  /**\n   * Background repeat. This will be ignored if using useImg.\n   */\n  @Input() backgroundRepeat: string = this.config.backgroundRepeat;\n  /**\n   * Name of the spinner\n   */\n  @Input() spinnerName: string = this.config.spinnerName;\n  /**\n   * Color of the spinner\n   */\n  @Input() spinnerColor: string = this.config.spinnerColor;\n  /**\n   * Notify on image load..\n   */\n  @Output()\n  load: EventEmitter<IonicImageLoaderComponent> = new EventEmitter<IonicImageLoaderComponent>();\n  /**\n   * Indicates if the image is still loading\n   */\n  isLoading = true;\n  element: HTMLElement;\n\n  constructor(\n    private _element: ElementRef,\n    private renderer: Renderer2,\n    private imageLoader: ImageLoaderService,\n    private config: ImageLoaderConfigService,\n  ) {\n  }\n\n  private _useImg: boolean = this.config.useImg;\n\n  /**\n   * Use <img> tag\n   */\n  @Input()\n  set useImg(val: boolean) {\n    this._useImg = val !== false;\n  }\n\n  /**\n   * Convenience attribute to disable caching\n   */\n  @Input()\n  set noCache(val: boolean) {\n    this.cache = val !== false;\n  }\n\n  private _src: string;\n\n  get src(): string {\n    return this._src;\n  }\n\n  /**\n   * The URL of the image to load.\n   */\n  @Input()\n  set src(imageUrl: string) {\n    this._src = this.processImageUrl(imageUrl);\n    this.updateImage(this._src);\n  }\n\n  ngOnInit(): void {\n    if (this.fallbackAsPlaceholder && this.fallbackUrl) {\n      this.setImage(this.fallbackUrl, false);\n    }\n\n    if (!this.src) {\n      // image url was not passed\n      // this can happen when [src] is set to a variable that turned out to be undefined\n      // one example could be a list of users with their profile pictures\n      // in this case, it would be useful to use the fallback image instead\n      // if fallbackUrl was used as placeholder we do not need to set it again\n      if (!this.fallbackAsPlaceholder && this.fallbackUrl) {\n        // we're not going to cache the fallback image since it should be locally saved\n        this.setImage(this.fallbackUrl);\n      } else {\n        this.isLoading = false;\n      }\n    }\n  }\n\n  private updateImage(imageUrl: string) {\n    this.imageLoader\n      .getImagePath(imageUrl)\n      .then((url: string) => this.setImage(url))\n      .catch((error: any) => this.setImage(this.fallbackUrl || imageUrl));\n  }\n\n  /**\n   * Gets the image URL to be loaded and disables caching if necessary\n   */\n  private processImageUrl(imageUrl: string): string {\n    if (this.cache === false) {\n      // need to disable caching\n\n      if (imageUrl.indexOf('?') < 0) {\n        // add ? if doesn't exists\n        imageUrl += '?';\n      } else {\n        imageUrl += '&';\n      }\n      // append timestamp at the end to make URL unique\n      imageUrl += 'cache_buster=' + Date.now();\n    }\n\n    return imageUrl;\n  }\n\n  /**\n   * Set the image to be displayed\n   * @param imageUrl image src\n   * @param stopLoading set to true to mark the image as loaded\n   */\n  private setImage(imageUrl: string, stopLoading: boolean = true): void {\n    this.isLoading = !stopLoading;\n\n    if (this._useImg) {\n      // Using <img> tag\n      if (!this.element) {\n        // create img element if we dont have one\n        this.element = this.renderer.createElement('img');\n        this.renderer.appendChild(this._element.nativeElement, this.element);\n      }\n\n      // set it's src\n      this.renderer.setAttribute(this.element, 'src', imageUrl);\n\n      // if imgAttributes are defined, add them to our img element\n      this.imgAttributes.forEach((attribute) => {\n        this.renderer.setAttribute(this.element, attribute.element, attribute.value);\n      });\n      if (this.fallbackUrl && !this.imageLoader.nativeAvailable) {\n        this.renderer.listen(this.element, 'error', () =>\n          this.renderer.setAttribute(this.element, 'src', this.fallbackUrl),\n        );\n      }\n    } else {\n      // Not using <img> tag\n\n      this.element = this._element.nativeElement;\n\n      for (const prop in propMap) {\n        if (this[prop]) {\n          this.renderer.setStyle(this.element, propMap[prop], this[prop]);\n        }\n      }\n      this.renderer.setStyle(\n        this.element,\n        'background-image',\n        `url(\"${imageUrl || this.fallbackUrl}\")`,\n      );\n    }\n    if (stopLoading) {\n      this.load.emit(this);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { File } from '@ionic-native/file/ngx';\nimport { IonicModule } from '@ionic/angular';\nimport { IonicImageLoaderComponent } from './ionic-image-loader.component';\n\nimport { ImageLoaderConfigService } from './services/image-loader-config.service';\nimport { ImageLoaderService } from './services/image-loader.service';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    HttpClientModule,\n    CommonModule,\n  ],\n  declarations: [IonicImageLoaderComponent],\n  exports: [IonicImageLoaderComponent],\n})\nexport class IonicImageLoader {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: IonicImageLoader,\n      providers: [\n        ImageLoaderConfigService,\n        ImageLoaderService,\n        File,\n      ],\n    };\n  }\n}\n"]}